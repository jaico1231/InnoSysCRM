# Generated by Django 5.1.3 on 2024-12-04 03:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import shared.models.datos_empresa
import shared.models.terceros
import shared.models.user
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombre', models.CharField(max_length=100, verbose_name='Comuna')),
            ],
            options={
                'verbose_name': 'Comuna',
                'verbose_name_plural': 'Comunas',
                'ordering': ['Nombre'],
            },
        ),
        migrations.CreateModel(
            name='Departamentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Departamento', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamento',
                'ordering': ['Departamento'],
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Descripcion', models.CharField(max_length=250)),
                ('Observacion', models.CharField(blank=True, max_length=1000)),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estado',
                'ordering': ['Descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Paises',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombre', models.CharField(max_length=60)),
                ('Iso_name', models.CharField(max_length=50)),
                ('alfa2', models.CharField(max_length=2)),
                ('alfa3', models.CharField(max_length=3)),
                ('Codigo', models.CharField(max_length=3)),
                ('gentilicio', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'verbose_name': 'Pais',
                'verbose_name_plural': 'Pais',
                'ordering': ['Nombre'],
            },
        ),
        migrations.CreateModel(
            name='Sexo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Descripcion', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Sexo',
                'verbose_name_plural': 'Sexo',
                'ordering': ['Descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Tipo_Cuenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tipo de Cuenta',
                'verbose_name_plural': 'Tipos de Cuenta',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Tipo_Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sigla', models.CharField(max_length=5)),
                ('Descripcion', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'tipodoc',
                'verbose_name_plural': 'tipodoc',
                'ordering': ['Descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Tipo_Usuario',
            fields=[
                ('IdTipoUsuario', models.AutoField(primary_key=True, serialize=False)),
                ('Nombre', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Tipo_Usuario',
                'verbose_name_plural': 'Tipo_Usuario',
                'ordering': ['Nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=50)),
                ('titulo', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Tipo de Base de Datos',
                'verbose_name_plural': 'Tipos de Base de Datos',
                'ordering': ['tipo'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('NumeroIdentificacion', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=shared.models.user.Cargar_imagenes_articulos_path, verbose_name='Imagen de perfil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
                ('TipoDocumento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.tipo_documento')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Barrio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombre', models.CharField(max_length=100, verbose_name='Barrio')),
                ('Comuna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.comuna')),
            ],
            options={
                'verbose_name': 'Barrio',
                'verbose_name_plural': 'Barrios',
                'ordering': ['Nombre'],
            },
        ),
        migrations.CreateModel(
            name='EstadoEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('estado', models.CharField(max_length=50)),
                ('sigla', models.CharField(max_length=2)),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('subject', models.CharField(max_length=255)),
                ('body_text', models.TextField()),
                ('body_html', models.TextField(blank=True, null=True)),
                ('from_email', models.EmailField(max_length=254)),
                ('to_email', models.EmailField(max_length=254)),
                ('attachment_path', models.CharField(blank=True, max_length=255, null=True)),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.estadoemail')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('estado', models.BooleanField(default=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('group', models.ManyToManyField(blank=True, related_name='menu', to='auth.group')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('url_name', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('estado', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='menu_items', to='auth.group')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shared.menu')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Municipios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Municipio', models.CharField(max_length=255, verbose_name='Municipio')),
                ('Departamentos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.departamentos')),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
                'ordering': ['Municipio'],
            },
        ),
        migrations.AddField(
            model_name='comuna',
            name='Municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.municipios'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='departamentos',
            name='Paises',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.paises'),
        ),
        migrations.CreateModel(
            name='Periocidades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('Descripcion', models.CharField(max_length=250, unique=True)),
                ('Observacion', models.CharField(blank=True, max_length=400, null=True)),
                ('CantidadDias', models.IntegerField()),
                ('Meses', models.IntegerField()),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatosIniciales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('nit', models.CharField(blank=True, max_length=100, null=True)),
                ('direccion', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.IntegerField(blank=True, null=True)),
                ('correo', models.EmailField(blank=True, max_length=254, null=True)),
                ('reprelegal', models.CharField(blank=True, max_length=100, null=True)),
                ('documento_representante', models.IntegerField(blank=True, null=True)),
                ('cargo', models.CharField(blank=True, max_length=100, null=True)),
                ('numerocuenta', models.CharField(blank=True, max_length=100, null=True)),
                ('banco', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=shared.models.datos_empresa.Logo_Empresa_path, verbose_name='Logo de La Empresa')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
                ('Departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.departamentos')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.municipios')),
                ('pais', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.paises')),
                ('periocidadpago', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.periocidades')),
                ('tipocuenta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.tipo_cuenta')),
                ('tipodoc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.tipo_documento')),
            ],
            options={
                'verbose_name': 'Datos de la Empresa',
                'verbose_name_plural': 'Datos de la Empresa',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Tipo_Tercero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('descripcion', models.CharField(max_length=150, verbose_name='Nombre')),
                ('sigla', models.CharField(max_length=10, verbose_name='sigla')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tipo de Tercero',
                'verbose_name_plural': 'Tipos de Terceros',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Terceros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('Nombre', models.CharField(max_length=150, verbose_name='Nombre')),
                ('Apellido', models.CharField(blank=True, max_length=150, null=True, verbose_name='apellido')),
                ('NumeroIdentificacion', models.CharField(blank=True, max_length=20, unique=True, verbose_name='documento')),
                ('Direccion', models.CharField(blank=True, max_length=100, verbose_name='direccion')),
                ('TelefonoFijo', models.CharField(blank=True, max_length=16, verbose_name='telefono fijo')),
                ('TelefonoMovil', models.CharField(blank=True, max_length=16, verbose_name='telefono movil')),
                ('Email', models.EmailField(blank=True, max_length=80, null=True, unique=True, verbose_name='email ')),
                ('update_img', models.ImageField(blank=True, null=True, upload_to=shared.models.terceros.Cargar_imagenes_terceros_path)),
                ('Estado', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='estado_tercero', to='shared.estado')),
                ('asesor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Asesor', to=settings.AUTH_USER_MODEL)),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departamento_tercero', to='shared.departamentos')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='municipio_tercero', to='shared.municipios')),
                ('pais', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pais_tercero', to='shared.paises')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
                ('TipoDocumento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tipo_tercero', to='shared.tipo_documento')),
                ('Tipo_Tercero', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tipo_tercero', to='shared.tipo_tercero')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TipoPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tipo de Pago',
                'verbose_name_plural': 'Tipos de Pago',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Tipos_Anexos',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('Id_TipoDocumento', models.AutoField(primary_key=True, serialize=False)),
                ('Descripcion', models.CharField(max_length=250)),
                ('Observacion', models.CharField(blank=True, max_length=400, null=True)),
                ('Activo', models.BooleanField(default=True, verbose_name='activo')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnexosTerceros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('Archivo', models.FileField(blank=True, null=True, upload_to=shared.models.terceros.Cargar_documentos_terceros_path)),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
                ('Tercero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.terceros')),
                ('TipoAnexo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.tipos_anexos')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TipoTransaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConexionBD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('usuario', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('port', models.IntegerField()),
                ('dominio', models.CharField(max_length=50)),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_created', to=settings.AUTH_USER_MODEL)),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_user_updated', to=settings.AUTH_USER_MODEL)),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.tipodb')),
            ],
            options={
                'verbose_name': 'Conexion de Base de Datos',
                'verbose_name_plural': 'Conexion de Base de Datos',
                'ordering': ['usuario'],
                'unique_together': {('usuario', 'dominio')},
            },
        ),
    ]
