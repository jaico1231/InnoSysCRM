"""
Django settings for ROMIL_BETA1 project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import environ # type: ignore
from django.core.exceptions import ImproperlyConfigured


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()

env_file = os.path.join(BASE_DIR, '.env.produc')
if os.path.exists(env_file):
    environ.Env.read_env(env_file)
else:
    raise ImproperlyConfigured(f"Env file '{env_file}' not found")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='django-/*Romil*/-yz*2cjlzy9hy&cv@asdfa arqew12{{*&lf-1xh_1z_8_t#d08s^p0z91p*5268*#')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG', default=True)

ALLOWED_HOSTS = env('ALLOWED_HOSTS', default=['*'])


# Application definition

BASE_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
LOCAL_APPS = [
    'shared',
    'ActivosFijos',
    'Comercial',
    'Contabilidad',
    'MacroProcesos',
    'Produccion',
    'RrHh',
    
]

THIRD_APPS = [
    
]
INSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_APPS

BASE_MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
LOCAL_MIDDLEWARE = [
    
]
THIRD_MIDDLEWARE = [
    'crum.CurrentRequestUserMiddleware',
    
]

MIDDLEWARE = BASE_MIDDLEWARE + LOCAL_MIDDLEWARE + THIRD_MIDDLEWARE


ROOT_URLCONF = 'ROMIL_BETA1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ROMIL_BETA1.sidebar_processors.sidebar_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'ROMIL_BETA1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': env.db(),
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Bogota'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# Cambio realizado 
# STATIC_URL = 'static/'
STATIC_URL = '/static/'

#STATICFILES_DIRS = [BASE_DIR / 'static']
# STATIC_ROOT = BASE_DIR / 'staticfiles'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
#STATIC_ROOT = 'static'
###############################################
# PRODUCCION
STATIC_ROOT = '/home/indromil/INTRANET/ROMIL_BETA1/staticfiles/'

# Rutas adicionales donde buscar archivos estáticos
STATICFILES_DIRS = [
    '/home/indromil/INTRANET/ROMIL_BETA1/static/',
    '/home/indromil/INTRANET/ROMIL_BETA1/staticfiles/',
    # Otras rutas si es necesario
]
###############################################
AUTH_USER_MODEL = 'shared.User'

LOGIN_REDIRECT_URL = 'shared:userlist'
LOGOUT_REDIRECT_URL = 'login'  # URL a la que se redirige después del logout
LOGIN_URL = 'shared:login'

MEDIA_URL = '/media/'  # Cambiado para estar dentro del static
MEDIA_ROOT = os.path.join(STATIC_ROOT, 'media')
# MEDIA_ROOT = os.path.join(BASE_DIR / 'staticfiles', 'media')
#
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = env.int('SECURE_HSTS_SECONDS', default=3600)
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SESSION_COOKIE_AGE = 60 * 30  # 30 minutos
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
# # SECURE_CONTENT_TYPE_NOSNIFF = True
# SECURE_BROWSER_XSS_FILTER = True
# X_FRAME_OPTIONS = 'DENY'

#para produccion instalando primero whitenoise
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# configuracion de servidor de correos 
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = env('EMAIL_PORT')
EMAIL_USE_TLS = env('EMAIL_USE_TLS')
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
